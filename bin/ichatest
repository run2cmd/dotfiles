#!/bin/bash
FAILED=0
trap 'FAILED=1' ERR

source ~/.rvm/scripts/rvm
rvm use

fdfind . 'modules/' -d 1 | xargs -i rm -rf {}

yamllint data/ products/

envName="$(basename ${PWD})_$(git rev-parse --abbrev-ref HEAD)"
if [ -d './products' ] ;then
  ajvParams='--all-errors=true --spec=draft2020 --data --strict-tuples=false'
  find products/ -iname '*.yaml' -o -iname '*.yml' \( -exec ajv ${ajvParams} validate -s schemas/products.json -d {} \; \)
else
  ajvParams='--all-errors=true --data --strict-tuples=false'
  find profiles/ -iname '*.yaml' -o -iname '*.yml' \( -exec ajv ${ajvParams} validate -s schemas/profiles.json -d {} \; \)
fi

for yamlfile in $(find -path "./conf/*" -not -path "./conf/jenkins/*" -iname '*.yaml'); do ajv ${ajvParams} validate -s schemas/${yamlfile%.*}.json -d ${yamlfile} ; done
for yamlfile in $(find ./conf/jenkins -iname '*.yaml'); do
  schemafile=schemas/${yamlfile%.*}.json
  filename=$(basename ${yamlfile})
  if [ ! -e ${schemafile} ] ;then
    if [ "${filename}" = 'config.yaml' ] ;then schemafile=schemas/conf/jenkins/config.json ;fi
    if [ "${filename}" = 'components.yaml' ] ;then schemafile=schemas/conf/jenkins/components.json ;fi
  fi
  ajv ${ajvParams} validate -s ${schemafile} -d ${yamlfile}
done

if [ -f data/env/${envName}.yaml ] ;then
  if [ -f schemas/data/env/env_file.json ] ;then ajv ${ajvParams} validate -s schemas/data/env/env_file.json -d data/env/${envName}.yaml -c ${HOME}/node_modules/ajv-formats/dist/index.js ;fi
  if [ -f inventory/hosts.sh ] ;then puppet_env=${envName} inventory/hosts.sh ;fi
  if [ -f inventory/icha.sh ] ;then puppet_env=${envName} inventory/icha.sh ;fi
fi

if [ $FAILED = 0 ] ;then echo "SUCCESS" ;else echo "FAILED" ;fi
